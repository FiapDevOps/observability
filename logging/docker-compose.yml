version: '3.8'

# Baseado no modelo apresentado no logz.io (https://logz.io/blog/elk-stack-on-docker/)
services:
  elasticsearch:
    build:
      context: elasticsearch/
      args:
        ELK_VERSION: 7.12.0
    volumes:
      - type: bind
        source: ./elasticsearch/config/elasticsearch.yml
        target: /usr/share/elasticsearch/config/elasticsearch.yml
        read_only: true
      - type: volume
        source: elasticsearch
        target: /usr/share/elasticsearch/data
    ports:
      - "9200:9200"
      - "9300:9300"
    environment:
      ES_JAVA_OPTS: "-Xmx256m -Xms256m"
      ELASTICSEARCH_USERNAME: elastic
      ELASTIC_PASSWORD: changeme
      # Usando single-node discovery para evitar verificações de bootstrap usadas no deploy em prod.
      # see: https://www.elastic.co/guide/en/elasticsearch/reference/current/bootstrap-checks.html
      discovery.type: single-node
    networks:
      - logging

  logstash:
    build:
      context: logstash/
      args:
        ELK_VERSION: 7.12.0
    volumes:
      - type: bind
        source: ./logstash/config/logstash.yml
        target: /usr/share/logstash/config/logstash.yml
        read_only: true
      - type: bind
        source: ./logstash/pipeline
        target: /usr/share/logstash/pipeline
        read_only: true
    ports:
      - "5044:5044"
      - "5000:5000/tcp"
      - "5000:5000/udp"
      - "9600:9600"
    environment:
      LS_JAVA_OPTS: "-Xmx256m -Xms256m"
    networks:
      - logging
    depends_on:
      - elasticsearch

  filebeat:
    build:
      context: filebeat/
      args:
        ELK_VERSION: 7.12.0
    # Necessário alterar o perfil para obter acesso ao filesystem dos containers na raiz do hospedeiro
    user: root
    environment:
      - strict.perms=false
      - output.elasticsearch.hosts=["elasticsearch:9200"]
      - ELASTICSEARCH_USERNAME='elastic'
      - ELASTICSEARCH_PASSWORD='changeme'
    volumes:
      - type: bind
        source: ./filebeat/config/filebeat.yml
        target: /usr/share/filebeat/filebeat.yml
        read_only: true
      - type: bind
        source: /var/lib/docker/containers
        target: /var/lib/docker/containers
        read_only: true
      - type: bind
        source: /var/run/docker.sock
        target: /var/run/docker.sock
        read_only: true       
    networks:
      - logging
    depends_on:
      - elasticsearch
      - kibana

  kibana:
    build:
      context: kibana/
      args:
        ELK_VERSION: 7.12.0
    volumes:
      - type: bind
        source: ./kibana/config/kibana.yml
        target: /usr/share/kibana/config/kibana.yml
        read_only: true
    ports:
      - "8080:5601"
    networks:
      - logging
    depends_on:
      - elasticsearch

  app:
    build:
      context: ./app    
    environment:
      - PORT=8080
    networks:
      logging:

# As linhas comentadas referem-se ao template do nginx.conf que customizará o log em formato JSON
  loadbalancer:
    image: nginx:latest
    labels:
      index.filebeat.logs: enable
    volumes:
      - type: bind
        source: ./nginx/config/nginx-default.conf
        target: /etc/nginx/conf.d/default.conf
      - type: bind
        source: ./nginx/config/nginx.conf
        target: /etc/nginx/nginx.conf        
    ports:
      - 80:80
    networks:
      logging:

networks:
  logging:
    driver: bridge

volumes:
  elasticsearch:
